<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2018 安徽谊品弘科技有限公司
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.blanc.event.dao.EventTypeDao">

    <resultMap id="EventTypeResultMap" type="com.blanc.event.model.EventType">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="app_code" jdbcType="VARCHAR" property="appCode"/>
        <result column="event_type" jdbcType="VARCHAR" property="eventType"/>
        <result column="max_execute_size" jdbcType="INTEGER" property="maxExecuteSize"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="schedule_time" jdbcType="INTEGER" property="scheduleTime"/>
        <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate"/>
        <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify"/>
        <result column="schedule" jdbcType="INTEGER" property="schedule"/>
        <result column="cron_expression" jdbcType="VARCHAR" property="cronExpression"/>

        <result column="name" jdbcType="VARCHAR" property="name"/>


    </resultMap>


    <sql id="cols_all">
    id, app_code, event_type, max_execute_size, `status`, schedule_time, gmt_create,
    gmt_modify,schedule,cron_expression,`name`
  </sql>

    <insert id="insert" parameterType="com.blanc.event.model.EventType" useGeneratedKeys="true" keyColumn="id"
            keyProperty="id">
    insert into event_type (app_code, event_type, max_execute_size, `status`, schedule_time, gmt_create, gmt_modify, schedule, cron_expression,`name`)
    values (#{appCode,jdbcType=VARCHAR}, #{eventType,jdbcType=VARCHAR}, #{maxExecuteSize,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{scheduleTime,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP},
      #{gmtModify,jdbcType=TIMESTAMP}, #{schedule,jdbcType=INTEGER}, #{cronExpression,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR})
  </insert>


    <select id="listAll" resultMap="EventTypeResultMap" parameterType="map">
        SELECT
        <include refid="cols_all"/>
        FROM
        event_type
    </select>


    <select id="listEventType" resultMap="EventTypeResultMap" parameterType="map">
        SELECT
        <include refid="cols_all"/>
        FROM
        event_type
        <where>
            <if test="appCode != null">
                AND app_code = #{appCode}
            </if>
        </where>

    </select>

    <select id="getEventType" resultMap="EventTypeResultMap" parameterType="map">
        SELECT
        <include refid="cols_all"/>
        FROM
        event_type
        <where>
            <if test="appCode != null">
                AND app_code = #{appCode}
            </if>
            <if test="eventType != null">
                AND event_type = #{eventType}
            </if>
            <if test="id != null">
                AND id = #{id}
            </if>
        </where>

    </select>

    <update id="updateEventType" parameterType="com.blanc.event.model.EventType">
        UPDATE event_type
        <trim prefix="set" suffixOverrides=",">
            <if test="name!=null">name=#{name},</if>
            <if test="maxExecuteSize!=null">max_execute_size=#{maxExecuteSize},</if>
            <if test="scheduleTime!=null">schedule_time=#{scheduleTime},</if>
            <if test="cronExpression!=null">cron_expression=#{cronExpression},</if>
            <if test="status!=null">`status`=#{status},</if>
        </trim>
        WHERE id=#{id}
    </update>


</mapper>